/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.GuestBUS;
import BUS.RegistrationRoomBUS;
import DTO.GuestDTO;
import DTO.RegistrationRoomDTO;
import DTO.RoomDTO;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author taipham
 */
public class DangKiThuePhongGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form DangKiThuePhong
     */
    private static DefaultTableModel _tableModelHaveRoom = new DefaultTableModel();
    private static DefaultTableModel _tableModelDontHaveRoom = new DefaultTableModel();
    private RegistrationRoomBUS _reRegistrationBUS;
    private RegistrationRoomDTO _reRegistrationDTO;
    private GuestBUS _guestBUS;
    private ArrayList<RegistrationRoomDTO> _listRegist;

    public DangKiThuePhongGUI() {
        initComponents();
        this.setName("Đăng kí");
        tbGuestDontHaveRoom.setFillsViewportHeight(true);
        tbGuestHaveRoom.setFillsViewportHeight(true);
        _reRegistrationBUS = new RegistrationRoomBUS();
        _reRegistrationDTO = new RegistrationRoomDTO();
        _guestBUS = new GuestBUS();
        _listRegist = new ArrayList<>();

        _listRegist = _reRegistrationBUS.getAllListRegistration();
        _tableModelDontHaveRoom = (DefaultTableModel) tbGuestDontHaveRoom.getModel();
        _tableModelHaveRoom = (DefaultTableModel) tbGuestHaveRoom.getModel();

        showTableGuestDontHaveRoom(QLKhachThueTroGUI.getListGuest());
        showTableGuestHaveRoom(QLKhachThueTroGUI.getListGuest());
        showCbRoom(QLPhongTroGUI.getListRoom());
    }

    public static void showTableGuestDontHaveRoom(ArrayList<GuestDTO> listGuest) {
        int i = 1;
        _tableModelDontHaveRoom.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        for (GuestDTO guest : listGuest) {
            if (guest.getStateGuest() == 0) {
                _tableModelDontHaveRoom.addRow(new Object[]{
                    i++, guest.getGuestID(), guest.getGuestName(), guest.getSex(), sdf.format(guest.getDob()),});
            }
        }
    }

    public RegistrationRoomDTO getRegist(String guestID) {
        for (RegistrationRoomDTO regist : _listRegist) {
            if (regist.getGuestID().equals(guestID)) {
                return regist;
            }
        }
        return null;
    }

    public void showTableGuestHaveRoom(ArrayList<GuestDTO> listGuest) {
        int i = 1;
        _tableModelHaveRoom.setRowCount(0);
        RegistrationRoomDTO regis = new RegistrationRoomDTO();

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        for (GuestDTO guest : listGuest) {
            if (guest.getStateGuest() == 1) {
                regis = getRegist(guest.getGuestID());
                if (regis != null) {
                    _tableModelHaveRoom.addRow(new Object[]{
                        i++, regis.getRoomID(), guest.getGuestID(), guest.getGuestName(), guest.getSex(), sdf.format(guest.getDob()), sdf.format(regis.getDateRegistration())});
                }

            }
        }
    }

    public static void showCbRoom(ArrayList<RoomDTO> listRoom) {
        cbRoom.removeAllItems();
        for (RoomDTO room : listRoom) {
            if (room.getQuanityOfGuest() < QLGiaDichVuGUI.getRoomType(room.getRoomTypeID()).getMaxNumberGuest()) {
                cbRoom.addItem(room.getRoomID());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbGuestDontHaveRoom = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbGuestHaveRoom = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cbRoom = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        spDateRegis = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        btnRegistration = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("ĐĂNG KÍ THUÊ PHÒNG");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách chưa có phòng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        tbGuestDontHaveRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã khách trọ", "Tên khách trọ ", "Phái", "Ngày sinh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbGuestDontHaveRoom);
        if (tbGuestDontHaveRoom.getColumnModel().getColumnCount() > 0) {
            tbGuestDontHaveRoom.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbGuestDontHaveRoom.getColumnModel().getColumn(0).setMaxWidth(40);
            tbGuestDontHaveRoom.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbGuestDontHaveRoom.getColumnModel().getColumn(1).setMaxWidth(100);
            tbGuestDontHaveRoom.getColumnModel().getColumn(3).setPreferredWidth(50);
            tbGuestDontHaveRoom.getColumnModel().getColumn(3).setMaxWidth(50);
            tbGuestDontHaveRoom.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbGuestDontHaveRoom.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách đã đăng kí", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel5.setLayout(new java.awt.BorderLayout());

        tbGuestHaveRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT ", "Mã phòng trọ", "Mã khách trọ", "Tên khách trọ", "Phái", "Ngày sinh ", "Ngày thuê"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbGuestHaveRoom);
        if (tbGuestHaveRoom.getColumnModel().getColumnCount() > 0) {
            tbGuestHaveRoom.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbGuestHaveRoom.getColumnModel().getColumn(0).setMaxWidth(40);
            tbGuestHaveRoom.getColumnModel().getColumn(4).setPreferredWidth(50);
            tbGuestHaveRoom.getColumnModel().getColumn(4).setMaxWidth(50);
        }

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Lựa chọn"));

        jLabel3.setText("Phòng trống: ");

        jLabel4.setText("Ngày đăng kí: ");

        spDateRegis.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.DAY_OF_WEEK));
        spDateRegis.setEditor(new javax.swing.JSpinner.DateEditor(spDateRegis, "dd/MM/yyyy"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(spDateRegis, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(cbRoom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spDateRegis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        btnRegistration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_dangki.png"))); // NOI18N
        btnRegistration.setText("Đăng kí phòng ");
        btnRegistration.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistration.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrationActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_thoat.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThoat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegistration)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(545, 545, 545)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(478, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void reset() {
        tbGuestDontHaveRoom.clearSelection();
        tbGuestHaveRoom.clearSelection();
        showCbRoom(QLPhongTroGUI.getListRoom());
    }

    //su kien bam nut dang ki
    private void btnRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrationActionPerformed
        int vt = tbGuestDontHaveRoom.getSelectedRow();
        if (vt != -1) {
            _reRegistrationDTO.setGuestID(tbGuestDontHaveRoom.getValueAt(vt, 1).toString());
            _reRegistrationDTO.setRoomID(cbRoom.getSelectedItem().toString());
            _reRegistrationDTO.setDateRegistration((Date) spDateRegis.getValue());

            if (_reRegistrationBUS.registrationRoom(_reRegistrationDTO)) {

                JOptionPane.showMessageDialog(this, "Thêm vào database thành công", "Đăng kí thuê phòng", JOptionPane.INFORMATION_MESSAGE);

                _listRegist.add(_reRegistrationDTO);

                QLKhachThueTroGUI.updateStateGuestGUI(_reRegistrationDTO.getGuestID());

                showTableGuestHaveRoom(QLKhachThueTroGUI.getListGuest());

                QLKhachThueTroGUI._guestBUS.updateStateGuest(_reRegistrationDTO.getGuestID());

                QLPhongTroGUI.updateQuanity(_reRegistrationDTO.getRoomID());
                
                _tableModelDontHaveRoom.removeRow(vt);

            } else {
                JOptionPane.showMessageDialog(this, "Thêm vào database thất bại", "Đăng kí thuê phòng", JOptionPane.ERROR_MESSAGE);
            }
            reset();

        } else {
            JOptionPane.showMessageDialog(this, "Hãy chọn khách trọ đăng kí", "Đăng kí khách trọ", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnRegistrationActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistration;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnThoat;
    private static javax.swing.JComboBox<String> cbRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner spDateRegis;
    private javax.swing.JTable tbGuestDontHaveRoom;
    private javax.swing.JTable tbGuestHaveRoom;
    // End of variables declaration//GEN-END:variables
}
